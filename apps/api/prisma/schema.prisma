generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id()
  email     String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  groups   GroupMembers[]
  TaskType TaskType[]
}

model Group {
  id        String   @id() @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  members  GroupMembers[]
  TaskType TaskType[]
}

model GroupMembers {
  membershipType GroupMembershipType
  user           User                @relation(fields: [userId], references: [id])
  userId         String
  group          Group               @relation(fields: [groupId], references: [id])
  groupId        String
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt()

  @@id([userId, groupId])
}

enum GroupMembershipType {
  owner
  member
}

model TaskType {
  id          String   @id() @default(uuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt()

  user    User?   @relation(fields: [userId], references: [id])
  userId  String?
  group   Group?  @relation(fields: [groupId], references: [id])
  groupId String?
  tasks   Task[]
}

model Task {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  completedBy String

  type       TaskType @relation(fields: [taskTypeId], references: [id])
  taskTypeId String
}
